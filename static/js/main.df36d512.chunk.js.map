{"version":3,"sources":["components/Statistics/Statistics.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styled.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","Style/globalStyles.js","components/App/App.js","index.js"],"names":["StatisticsButton","styled","button","List","ul","ListItem","li","StatisticsTitle","h2","Paragraph","p","FeedbackOptions","onClickButton","onShow","type","onClick","Wrapper","section","Title","h1","Notification","message","Statistics","goodValue","neutralValue","badValue","state","oncountPositiveFeedbackPercentage","oncountTotalFeedback","Fragment","visible","Section","title","children","GlobalStyle","createGlobalStyle","App","good","neutral","bad","positiveFeedback","setValue","key","setState","countPositiveFeedbackPercentage","value","Math","trunc","countTotalFeedback","Object","values","reduce","acc","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEaA,EAAmBC,IAAOC,OAAV,stBAiChBC,EAAOF,IAAOG,GAAV,0BACJC,EAAWJ,IAAOK,GAAV,0BACRC,EAAkBN,IAAOO,GAAV,0BACfC,EAAYR,IAAOS,EAAV,0B,OCCPC,EAjCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,OAAlB,OACtB,qCACE,cAACN,EAAD,mCACA,cAACP,EAAD,CACEc,KAAK,SACLC,QAAS,WACPF,IACAD,EAAc,SAJlB,kBASA,cAACZ,EAAD,CACEc,KAAK,SACLC,QAAS,WACPF,IACAD,EAAc,YAJlB,qBASA,cAACZ,EAAD,CACEc,KAAK,SACLC,QAAS,WACPF,IACAD,EAAc,QAJlB,qBC1BSI,EAAUf,IAAOgB,QAAV,0BACPC,EAAQjB,IAAOkB,GAAV,0BACLV,EAAYR,IAAOS,EAAV,0BCEPU,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,eAAC,EAAD,eAAaA,MCiDpCC,EA3CI,SAAC,GAAD,IACjBC,EADiB,EACjBA,UACAC,EAFiB,EAEjBA,aACAC,EAHiB,EAGjBA,SACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,kCACAC,EANiB,EAMjBA,qBANiB,OAQjB,eAAC,IAAMC,SAAP,WACE,cAACtB,EAAD,yBAECmB,EAAMI,QACL,eAAC3B,EAAD,WACE,cAACE,EAAD,UACE,eAACI,EAAD,mBAAiBc,EAAjB,SAEF,cAAClB,EAAD,UACE,eAACI,EAAD,sBAAoBe,OAEtB,cAACnB,EAAD,UACE,eAACI,EAAD,kBAAgBgB,OAElB,cAACpB,EAAD,UACE,eAACI,EAAD,oBAAkBmB,EAAqBF,QAEzC,cAACrB,EAAD,UACE,eAACI,EAAD,gCACqB,IACJ,IAAdc,EACG,EACAI,EACe,IAAZJ,EAAmBK,EAAqBF,IACxC,IANT,YAYJ,cAAC,EAAD,CAAcL,QAAQ,6BCtCbU,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACjB,EAAD,WACE,eAACE,EAAD,eAASc,EAAT,OACCC,MCWUC,EAdKC,YAAH,6ZCIXC,E,4MACJV,MAAQ,CACNW,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,iBAAkB,EAClBV,SAAS,G,EAEXW,SAAW,SAACC,GACV,EAAKC,UAAS,SAACjB,GAAD,sBACXgB,EAAMhB,EAAMgB,GAAO,O,EAGxB7B,OAAS,WACP,EAAK8B,SAAS,CACZb,SAAS,K,EAGbc,gCAAkC,SAACC,GACjC,OAAOC,KAAKC,MAAMF,I,EAGpBG,mBAAqB,SAACtB,GACpB,OAAOuB,OAAOC,OAAOxB,GAAOyB,QAAO,SAACC,EAAKP,GAAN,OAAgBO,EAAMP,IAAO,I,4CAElE,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,EAAD,CAASb,MAAM,GAAf,UACE,cAAC,EAAD,CAAiBpB,cAAeyC,KAAKZ,SAAU5B,OAAQwC,KAAKxC,SAE5D,cAAC,EAAD,CACEU,UAAW8B,KAAK3B,MAAMW,KACtBb,aAAc6B,KAAK3B,MAAMY,QACzBb,SAAU4B,KAAK3B,MAAMa,IACrBb,MAAO2B,KAAK3B,MACZC,kCACE0B,KAAKT,gCAEPhB,qBAAsByB,KAAKL,+B,GAxCrBM,aAgDHlB,IClDfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.df36d512.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StatisticsButton = styled.button`\r\n  display: inline-block;\r\n  padding: 0 25px;\r\n  outline: none;\r\n  border: 1px solid #fff;\r\n  border-radius: 50px;\r\n  height: 46px;\r\n  line-height: 46px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: #444;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\r\n  cursor: pointer;\r\n  transition: box-shadow 0.2s;\r\n  &:focus-visible {\r\n    border: 1px solid #4c51f9;\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    transition: all 0.2s;\r\n    box-shadow: 0 7px 14px rgb(65 132 144 / 10%), 0 3px 6px rgb(0 0 0 / 8%);\r\n  }\r\n  &:active {\r\n    background-color: #1e90ff;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul``;\r\nexport const ListItem = styled.li``;\r\nexport const StatisticsTitle = styled.h2``;\r\nexport const Paragraph = styled.p``;\r\n","import React from \"react\";\r\nimport {\r\n  StatisticsButton,\r\n  StatisticsTitle,\r\n} from \"../Statistics/Statistics.styled\";\r\n\r\nconst FeedbackOptions = ({ onClickButton, onShow }) => (\r\n  <>\r\n    <StatisticsTitle>Please live feedback</StatisticsTitle>\r\n    <StatisticsButton\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onShow();\r\n        onClickButton(\"good\");\r\n      }}\r\n    >\r\n      Good\r\n    </StatisticsButton>\r\n    <StatisticsButton\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onShow();\r\n        onClickButton(\"neutral\");\r\n      }}\r\n    >\r\n      Neutral\r\n    </StatisticsButton>\r\n    <StatisticsButton\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onShow();\r\n        onClickButton(\"bad\");\r\n      }}\r\n    >\r\n      Bad\r\n    </StatisticsButton>\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\nexport const Wrapper = styled.section``;\r\nexport const Title = styled.h1``;\r\nexport const Paragraph = styled.p``;\r\n","import React from \"react\";\r\nimport { Paragraph } from \"../Section/Section.styled\";\r\n\r\nconst Notification = ({ message }) => <Paragraph> {message}</Paragraph>;\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  StatisticsTitle,\r\n  Paragraph,\r\n} from \"../Statistics/Statistics.styled\";\r\n\r\nconst Statistics = ({\r\n  goodValue,\r\n  neutralValue,\r\n  badValue,\r\n  state,\r\n  oncountPositiveFeedbackPercentage,\r\n  oncountTotalFeedback,\r\n}) => (\r\n  <React.Fragment>\r\n    <StatisticsTitle>Statistics</StatisticsTitle>\r\n\r\n    {state.visible ? (\r\n      <List>\r\n        <ListItem>\r\n          <Paragraph>Good:{goodValue} </Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>Neutral:{neutralValue}</Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>Bad:{badValue}</Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>Total:{oncountTotalFeedback(state)}</Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>\r\n            Positive feedback:{\" \"}\r\n            {goodValue === 0\r\n              ? 0\r\n              : oncountPositiveFeedbackPercentage(\r\n                  (goodValue * 100) / oncountTotalFeedback(state)\r\n                )}{\" \"}\r\n            %\r\n          </Paragraph>\r\n        </ListItem>\r\n      </List>\r\n    ) : (\r\n      <Notification message=\"There is no feedback\" />\r\n    )}\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Statistics;\r\n","import { Wrapper, Title } from \"../Section/Section.styled\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Wrapper>\r\n    <Title> {title} </Title>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Section;\r\n","import { createGlobalStyle } from 'styled-components';\r\n \r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n  background-color: #dfdbe5;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239C92AC' fill-opacity='0.4' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\");\r\n  margin-left: 40px;\r\n  }\r\n\r\nul {\r\n  list-style: none;\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n`;\r\n \r\nexport default GlobalStyle;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions\";\r\nimport Statistics from \"../Statistics\";\r\nimport Section from \"../Section\";\r\nimport GlobalStyle from \"../../Style/globalStyles\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    positiveFeedback: 0,\r\n    visible: false,\r\n  };\r\n  setValue = (key) => {\r\n    this.setState((state) => ({\r\n      [key]: state[key] + 1,\r\n    }));\r\n  };\r\n  onShow = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  countPositiveFeedbackPercentage = (value) => {\r\n    return Math.trunc(value);\r\n  };\r\n\r\n  countTotalFeedback = (state) => {\r\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <Section title=\"\">\r\n          <FeedbackOptions onClickButton={this.setValue} onShow={this.onShow} />\r\n\r\n          <Statistics\r\n            goodValue={this.state.good}\r\n            neutralValue={this.state.neutral}\r\n            badValue={this.state.bad}\r\n            state={this.state}\r\n            oncountPositiveFeedbackPercentage={\r\n              this.countPositiveFeedbackPercentage\r\n            }\r\n            oncountTotalFeedback={this.countTotalFeedback}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}