{"version":3,"sources":["components/Statistics/Statistics.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styled.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","components/StatApp/StatApp.js","Style/globalStyles.js","components/App/App.js","index.js"],"names":["StatisticsButton","styled","button","List","ul","ListItem","li","Title","h2","Paragraph","p","FeedbackOptions","onClickGButton","onClickBButton","onClickNButton","onShow","Fragment","type","onClick","Wrapper","section","h1","Notification","message","Statistics","good","neutral","bad","state","oncountPositiveFeedbackPercentage","oncountTotalFeedback","visible","Section","title","children","StatApp","positiveFeedback","setState","countPositiveFeedbackPercentage","value","Math","trunc","countTotalFeedback","Object","values","reduce","acc","this","Component","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db732be4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StatisticsButton = styled.button`\r\n  display: inline-block;\r\n  padding: 0 25px;\r\n  outline: none;\r\n  border: 1px solid #fff;\r\n  border-radius: 50px;\r\n  height: 46px;\r\n  line-height: 46px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: #444;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\r\n  cursor: pointer;\r\n  transition: box-shadow 0.2s;\r\n  &:focus-visible {\r\n    border: 1px solid #4c51f9;\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    transition: all 0.2s;\r\n    box-shadow: 0 7px 14px rgb(65 132 144 / 10%), 0 3px 6px rgb(0 0 0 / 8%);\r\n  }\r\n  &:active {\r\n    background-color: #1e90ff;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul``;\r\nexport const ListItem = styled.li``;\r\nexport const Title = styled.h2``;\r\nexport const Paragraph = styled.p``;\r\n","import React from \"react\";\r\nimport { StatisticsButton, Title } from \"../Statistics/Statistics.styled\";\r\n\r\nconst FeedbackOptions = ({\r\n  onClickGButton,\r\n  onClickBButton,\r\n  onClickNButton,\r\n  onShow,\r\n}) => (\r\n  <React.Fragment>\r\n    <Title>Please live feedback</Title>\r\n    <StatisticsButton\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onShow();\r\n        onClickGButton();\r\n      }}\r\n    >\r\n      Good\r\n    </StatisticsButton>\r\n    <StatisticsButton\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onShow();\r\n        onClickNButton();\r\n      }}\r\n    >\r\n      Neutral\r\n    </StatisticsButton>\r\n    <StatisticsButton\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onShow();\r\n        onClickBButton();\r\n      }}\r\n    >\r\n      Bad\r\n    </StatisticsButton>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\nexport const Wrapper = styled.section``;\r\nexport const Title = styled.h1``;\r\nexport const Paragraph = styled.p``;\r\n","import React from \"react\";\r\nimport { Paragraph } from \"../Section/Section.styled\";\r\n\r\nconst Notification = ({ message }) => <Paragraph> {message}</Paragraph>;\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Title,\r\n  Paragraph,\r\n} from \"../Statistics/Statistics.styled\";\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  state,\r\n  oncountPositiveFeedbackPercentage,\r\n  oncountTotalFeedback,\r\n}) => (\r\n  <React.Fragment>\r\n    <Title>Statistics</Title>\r\n\r\n    {state.visible ? (\r\n      <List>\r\n        <ListItem>\r\n          <Paragraph>Good:{good} </Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>Neutral:{neutral}</Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>Bad:{bad}</Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>Total:{oncountTotalFeedback(state)}</Paragraph>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Paragraph>\r\n            Positive feedback:{\" \"}\r\n            {good === 0\r\n              ? 0\r\n              : oncountPositiveFeedbackPercentage(\r\n                  (good * 100) / oncountTotalFeedback(state)\r\n                )}{\" \"}\r\n            %\r\n          </Paragraph>\r\n        </ListItem>\r\n      </List>\r\n    ) : (\r\n      <Notification message=\"There is no feedback\" />\r\n    )}\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Statistics;\r\n","import { Wrapper, Title } from \"../Section/Section.styled\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Wrapper>\r\n    <Title> {title} </Title>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions'\r\nimport Statistics from '../Statistics';\r\nimport Section from '../Section';\r\n\r\n\r\n\r\n\r\nclass StatApp extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n      positiveFeedback: 0,\r\n      visible: false\r\n  };\r\n  onShow = () => {\r\n    this.setState({\r\n      visible: true\r\n    })\r\n  }\r\n    onClickGButton = () => {\r\n        this.setState({\r\n        good: this.state.good +1\r\n      })\r\n    };\r\n\r\n    onClickNButton = () => {\r\n        this.setState({\r\n        neutral:this.state.neutral +1,\r\n      })\r\n    };\r\n\r\n    onClickBButton = () => {\r\n        this.setState({\r\n        bad: this.state.bad +1\r\n      })\r\n    };\r\n  countPositiveFeedbackPercentage = (value) => {\r\n    return Math.trunc(value)\r\n  };\r\n  \r\n  countTotalFeedback = (state) => {\r\n    return Object.values(state).reduce((acc, value) => acc + value, 0)\r\n  };\r\n    render() {\r\n        \r\n      return (\r\n        <Section title = ''>\r\n        < FeedbackOptions\r\n            onClickGButton={this.onClickGButton}\r\n            onClickBButton={this.onClickBButton}\r\n            onClickNButton={this.onClickNButton}\r\n            onShow = {this.onShow}\r\n          />\r\n          \r\n          < Statistics good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            state={this.state}\r\n            oncountPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\r\n            oncountTotalFeedback = {this.countTotalFeedback}\r\n          />\r\n          \r\n          </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatApp;\r\n","import { createGlobalStyle } from 'styled-components';\r\n \r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n  background-color: #dfdbe5;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239C92AC' fill-opacity='0.4' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\");\r\n  margin-left: 40px;\r\n  }\r\n\r\nul {\r\n  list-style: none;\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n`;\r\n \r\nexport default GlobalStyle;\r\n\r\n\r\n","import React from \"react\";\nimport StatApp from \"../StatApp\";\nimport GlobalStyle from \"../../Style/globalStyles\";\n\nconst App = () => (\n  <React.Fragment>\n    <GlobalStyle />\n    <StatApp />\n  </React.Fragment>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}